@page "/login"
@inject NavigationManager navigationManager
@inject DatabaseService databaseService
@layout NoMenuLayout
@inject UserState UserState

<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <title>CashClicky</title>
</head>

<body>
 <!---Main Container-->
    <div class="container d-flex justify-content-center align-items-center min-vh-100">


        <!--Left Box-->
        <div class="col-md-6 rounded-4 d-flex justify-content-center align-items-center flex-column left-box"
            style="background: white">
            <div class="featured-image mb-3">
                <img src="signup.jpg" class="img-fluid" style="width: 250px;" alt="signup">
                <p class=" fs-2" style="font-family: 'Courier New', Courier, monospace; font-weight: 600;">
                    CashClicks</p>
                <small class="text-wrap text-center"
                    style="width: 17rem; font-family: 'Courier New', Courier, monospace;">Track Every Penny, Master
                    Every Expense!</small>
            </div>
        </div>

        <!--Right Box-->
        <div class="col-md-6 right-box">
            <div class="row align-items-center">
                <div class="header-text mb-4">
                    <h2>Hello Again</h2>
                    <p>We are happy to have you back.</p>
                </div>
           <EditForm Model="_user" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
                <div class="input-group mb-3">
                    <InputText type="email" class="form-control form-control-lg bg-light fs-6" placeholder="Email Address"
                               name="" id="" @bind-Value="_user.Email"/>
                </div>
                <div class="input-group mb-1">
                    <InputText type="password" class="form-control form-control-lg bg-light fs-6" placeholder="Password"
                               name="" id="" @bind-Value="_user.Password"/>
                </div>

                <div class="input-grou mb-3 justify-content-between">
                    <div class="form-check mt-2">
                        <input type="checkbox" class="form-check-input " name="" id="formCheck">
                        <label for="formCheck" class="form-check-label fs-6 text-secondary mb-2">Remember Me</label>
                    </div>
                    <div class="Forget">
                        <small><a href="#"> Forget Password</a></small>
                    </div>
                </div>

                <div class="input-group mb-3">
                    <button class="btn btn-primary btn-lg w-100 fs-6" type="submit"
                            style="background-color: rgb(59, 236, 150); border-color: rgb(59, 236, 150) ;">
                        Login
                    </button>
                </div>
                <div class="row mb-3">
                    <small class="text-center">
                        Don't have an account? <a href="/">Sign Up</a>
                    </small>
                </div>
            </EditForm>

            <div>
                <p style="font-size:30">@_message</p>
            </div>
         </div>

         </div>
      </div>

</body>




@code {
    private User _user = new User();
    private string _message = "";

    private async Task HandleValidSubmit()
    {
        try
        {
            // Check if email and password are provided
            if (string.IsNullOrWhiteSpace(_user.Email) || string.IsNullOrWhiteSpace(_user.Password))
            {
                _message = "Please enter both email and password.";
                return; // Exit the method without attempting login
            }

            // Attempt login only if both email and password are provided
            string userId = await databaseService.Login(_user);

            // Check if userId is not null
            if (!string.IsNullOrEmpty(userId))
            {
                // Save the user ID in the UserState service
                UserState.userId = userId;
                // Navigate to dashboard and pass the user ID as a route parameter
                navigationManager.NavigateTo($"/dashboard/{userId}");
                return; // Exit the method after navigation
            }

            // If userId is null, login failed
            _message = "Invalid Credentials";
        }
        catch (Exception ex)
        {
            _message = $"Error: {ex.Message}";
        }
    }
}
