
@page "/"
@inject NavigationManager navigationManager
@inject DatabaseService databaseService
@inject UserState UserState
@layout NoMenuLayout
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <title>CashClicky</title>
</head>

<body>

        <!---Main Container-->
    <div class="container d-flex justify-content-center align-items-center min-vh-100 ">

            <!--Left Box-->
            <div class="col-md-6 rounded-4 d-flex justify-content-center align-items-center flex-column left-box"
                 style="background: white">
                <div class="featured-image mb-3">
                    <img src="signup.jpg" class="img-fluid" style="width: 250px;" alt="signup">
                    <p class=" fs-2" style="font-family: 'Courier New', Courier, monospace; font-weight: 600;">
                        CashClicks
                    </p>
                    <small class="text-wrap text-center"
                           style="width: 17rem; font-family: 'Courier New', Courier, monospace;">
                        Track Every Penny, Master
                        Every Expense!
                    </small>
                </div>
            </div>
             <!--Right Box-->
            <div class="col-md-6 right-box">
                <div class="row align-items-center">
                    <div class="header-text mb-4">
                        <h2>Create an account</h2>
                        <p>Join Us Today: Your Financial Journey Starts Here!</p>
                    </div>

                    <EditForm Model="_user" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                   
                    <div class="input-group mb-2">
                        <InputText type="email" class="form-control form-control-lg bg-light fs-6"
                               placeholder="Email Address" name="" id="" required @bind-Value="_user.Email" />
                    </div>

                    <div class="input-group mb-2">
                        <input type="password" class="form-control form-control-lg bg-light fs-6" placeholder="Password"
                               name="" id="" required/>
                    </div>
                    <div class="input-group mb-3">
                        <InputText type="password" class="form-control form-control-lg bg-light fs-6" placeholder="Re-type Password"
                               name="" id="" required @bind-Value="_user.Password"/>
                    </div>

                    <div class="input-group mb-3">
                        <button class="btn btn-primary btn-lg w-100 fs-6"
                               type="submit" style="background-color: rgb(59, 236, 150); border-color: rgb(59, 236, 150);">
                            Sign Up
                        </button>
                    </div>
               </EditForm>
                    <div>
                        <p>@_message</p>
                    </div>

                    <div class="row mb-3">
                        <small class="text-center">
                            Already have an account? <a href="login">Login</a>
                        </small>
                    </div>

                </div>

            </div>

    </div>
</body>




@code {
    private User _user = new User();
    private string _message = "";

   
    private async Task HandleValidSubmit()
    {
        try
        {
            string userId = await databaseService.AddUser(_user);
            if (!string.IsNullOrEmpty(userId))
            {
                UserState.userId = userId;
                _message = "User registered successfully!";
                await Task.Delay(3000);
                navigationManager.NavigateTo($"/accountinfo/{userId}");
            }
            else
            {
                _message = "Error registering user.";
            }
        }
        catch (Exception ex)
        {
            _message = $"Error: {ex.Message}";
        }
    }
}